## Expects a $ctx.prev.result with two keys:
##  - nextToken (nullable string)
##  - items (list of dicts with userId filled in, may have duplicates)

#if ($ctx.prev.result.items.isEmpty())
  #return ($ctx.prev.result)
#end

## BatchGetItem does not preserve order, can't handle duplicates
#set ($keys = [])
$util.qr($ctx.stash.put('pkToIndex', {}))

#foreach ($item in $ctx.prev.result.items)
  #set ($pk = "user/$item.userId")

  #if ($util.isNull($ctx.stash.pkToIndex[$pk]))
    $util.qr($ctx.stash.pkToIndex.put($pk, []))
    $util.qr($keys.add({
      "partitionKey": {"S": "$pk"},
      "sortKey": {"S": "profile"}
    }))
  #end

  #set ($index = $velocityCount - 1)
  $util.qr($ctx.stash.pkToIndex[$pk].add($index))
#end

{
  "version": "2018-05-29",
  "operation": "BatchGetItem",
  "tables": {
    "${table}": {
      "keys": $util.toJson($keys)
    }
  }
}
