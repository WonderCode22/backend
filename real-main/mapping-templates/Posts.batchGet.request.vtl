## Expects a $ctx.prev.result with two keys:
##  - nextToken (nullable string)
##  - items (list of dicts with postId filled in, may have duplicates)

#if ($ctx.prev.result.items.isEmpty())
  #return ($ctx.prev.result)
#end

## BatchGetItem can't handle duplicates
#set ($ctx.stash.postIdToIndex = {})
#set ($keys = [])

#foreach ($post in $ctx.prev.result.items)
  #if (! $ctx.stash.postIdToIndex.containsKey($post.postId))
    $util.qr($ctx.stash.postIdToIndex.put($post.postId, $foreach.index))
    $util.qr($keys.add({
      'partitionKey': {'S': "post/$post.postId"},
      'sortKey': {'S': '-'}
    }))
  #end
#end

{
  "version": "2018-05-29",
  "operation": "BatchGetItem",
  "tables": {
    "${table}": {
      "keys": $util.toJson($keys)
    }
  }
}
